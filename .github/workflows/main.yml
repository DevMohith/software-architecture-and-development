name: Deploy to Heroku

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "Backend/**"
      - "Frontend/**"
      - ".github/workflows/deploy.yml"

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Heroku Container Registry
        uses: akshnz/heroku-login@v2
        with:
          api_key: ${{ secrets.HEROKU_API_KEY }}

      - name: Build and Push Backend Services to Heroku Container Registry
        run: |
          services=(
            "api-gateway cook-assist-api"
            "user-authentication cook-assist-auth"
            "user-management cook-assist-user"
            "recipe-analytics cook-assist-analytics"
            "recipe-vault cook-assist-vault"
          )
          
          for service in "${services[@]}"; do
            IFS=" " read -r dir app <<< "$service"
            echo "Building and pushing $dir to $app..."
            cd Backend/services/$dir
            heroku container:push web -a $app
            if [ $? -eq 0 ]; then
              echo "$app successfully pushed. Releasing..."
              heroku container:release web -a $app
            else
              echo "Error pushing $app. Skipping release."
              exit 1
            fi
            cd - # Return to previous directory
          done

      - name: Build and Push Frontend to Heroku Container Registry
        run: |
          echo "Building and pushing frontend..."
          cd Frontend
          heroku container:push web -a cook-assist-front
          if [ $? -eq 0 ]; then
            echo "Frontend successfully pushed. Releasing..."
            heroku container:release web -a cook-assist-front
          else
            echo "Error pushing frontend. Skipping release."
            exit 1
          fi
          cd - # Return to previous directory

      - name: Clean up Docker images
        run: |
          docker system prune -af
