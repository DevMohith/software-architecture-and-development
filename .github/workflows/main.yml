name: CI/CD Pipeline for Heroku

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Define your Heroku app names (adjust these as needed)
  HEROKU_API_GATEWAY: cooking-assistant-api-gateway
  HEROKU_USER_AUTH: cooking-assistant-user-authentication
  HEROKU_USER_MANAGEMENT: cooking-assistant-user-management
  HEROKU_RECIPE_ANALYTICS: cooking-assistant-recipe-analytics
  HEROKU_RECIPE_VAULT: cooking-assistant-recipe-vault
  HEROKU_FRONTEND: cooking-assistant-frontend

jobs:
  build:
    name: Build and Push Docker Images to Heroku
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: 22

      # Install the Heroku CLI (optional; needed for heroku container:* commands)
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      # Explicit Docker login to Heroku Container Registry (this is optional when using heroku container:push)
      - name: Login to Heroku Container Registry
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: |
          echo $HEROKU_API_KEY | docker login --username=_ --password-stdin registry.heroku.com

      # Build and push API Gateway using Heroku CLI
      - name: Build and Push API Gateway
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_API_GATEWAY }}
        run: |
          cd Backend/services
          heroku container:push web -a $HEROKU_APP_NAME -f api-gateway/Dockerfile

      # Build and push User Authentication
      - name: Build and Push User Authentication
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_USER_AUTH }}
        run: |
          cd Backend/services
          heroku container:push web -a $HEROKU_APP_NAME -f user-authentication/Dockerfile

      # Build and push User Management
      - name: Build and Push User Management
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_USER_MANAGEMENT }}
        run: |
          cd Backend/services
          heroku container:push web -a $HEROKU_APP_NAME -f user-management/Dockerfile

      # Build and push Recipe Analytics
      - name: Build and Push Recipe Analytics
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_RECIPE_ANALYTICS }}
        run: |
          cd Backend/services
          heroku container:push web -a $HEROKU_APP_NAME -f recipe-analytics/Dockerfile

      # Build and push Recipe Vault
      - name: Build and Push Recipe Vault
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_RECIPE_VAULT }}
        run: |
          cd Backend/services
          heroku container:push web -a $HEROKU_APP_NAME -f recipe-vault/Dockerfile

      # Build and push Frontend
      - name: Build and Push Frontend
        env:
          HEROKU_APP_NAME: ${{ env.HEROKU_FRONTEND }}
        run: |
          cd Frontend
          heroku container:push web -a $HEROKU_APP_NAME -f Dockerfile

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Release API Gateway on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_API_GATEWAY }}
        run: heroku container:release web -a $HEROKU_APP_NAME

      - name: Release User Authentication on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_USER_AUTH }}
        run: heroku container:release web -a $HEROKU_APP_NAME

      - name: Release User Management on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_USER_MANAGEMENT }}
        run: heroku container:release web -a $HEROKU_APP_NAME

      - name: Release Recipe Analytics on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_RECIPE_ANALYTICS }}
        run: heroku container:release web -a $HEROKU_APP_NAME

      - name: Release Recipe Vault on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_RECIPE_VAULT }}
        run: heroku container:release web -a $HEROKU_APP_NAME

      - name: Release Frontend on Heroku
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
          HEROKU_APP_NAME: ${{ env.HEROKU_FRONTEND }}
        run: heroku container:release web -a $HEROKU_APP_NAME
